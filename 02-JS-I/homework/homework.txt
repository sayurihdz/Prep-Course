Variables:
Las variables son una forma en la cual puedes asignar o mas bien depositar un valor a algo, principalmente se represnetan con el diminutivo "var" que si pones esto antes de asignar la variable poniendo una letra y el = indicas que este mismo comando se debe ecomportar como una variable y no como una funsion u otra cosa, enconses primero pones "var i = 3.1416", tambien otra forma de asignar variables ademas de var es con let que se comporta casi igual que var pero con una diferencia a nivel scope, tambien esta la otra forma de asignar variables llamada const que es el diminutivo de constante y la variable o mas bien el valor que le asignes siempre va a ser el mismo porque es constante y no va a acambiar nunca, es por eso que tienes que tenere mucho cuidado con esta constante ya que si despues la quieres cambiar no va a ser igual que como si quisieras cambiar una variante "var".

Strings:
Son los bloques de texto, no numericos o decimales, solo es escribir en eloos con comillas, ya que si no, no sera evaluado como un String y puede marcar error, es importante poner la comillas para indicar que es un cuadro de texto.Funsiones, arumentos y return :

Funsiones:
este se debe de llamara con el codigo "function" para decirle al interperete que debe ser ejecutado y tratado como tal, este nos ayudara a asignar una cierta funsion de la parte de un comando el cual nos ayudara a efectuar una accion que quierramos repetir o llamara con mas facilidada a ala cual se le debe ede añadir argumentos para que ele interperete sepa que hacer dentro de uana funsion, que debe de ejecutar y si tiene la palabra "return" o "console.log" separa que tiene que devolver una parate de esa funsion que le estamos indicando junto con los argumentos, aunque cuando estamos habalando de fusniones siempre tenemos qur poner "return" en vez de "console.log" ya que este no se ocupa ya que el retunr ya hace ese trabajao de devolver una respuesta cuado lo ponemos al final del comando con el inicio de function, cuando estamos habalando de argumentos, son strings que escribimos dentro de los parentesis para indicar que tiene que hacer con esos argumentos, como se comprtan o se relacionan uno con los demas y que debe de retornar al final depues de conjugar todo eso que le dijimos a function que hiciera, son las cosas que a la final nos vana  arevotar como un resultado en retunr.

Declaraciones if:
If principalmente es una condicional que es como el primer paso o la primera condicional que debe de cumplir con ciertas caracateristicas para que esta misma sea ejecutada, si esta misma devuelve como resultado false en vez de true por lo mismo de que se comporta como un booleano se sigue a la otra operacion que seria else if y si esta opcion tampoco se cumple ya que da como respuesta false se va como la ultima opcion y sin importar nada en else, que este mismo hace la fumsion que se le asigne ya que las demas fallan en ejecucion.

True y false:
estos son valoeres booleanos y que estos valores solo pueden dar una de las dos respuesta que es "true y "false" estas misma se ejecutan y los valores o las expresiones que estamos dandole al interprete por medio de comandos cumplen con ciertas caracteristicas, por ejemplo si en un codigo se escribe algo que matematicamente no es correcto te devolvera false pero si esta operacion o comparacion matematica es verdadera najo esos estandares matematicos te devolvera true, es una parte en la cual el interprete puede comparar ciertas caracateristicas y devolver un resultado que bajo ciertos caracteres se comportan de forma verdadera o falsa.

FOR :
For es un bucle donde podemos repetir una misma funsion que nos ayude a hacer copias o numeraciones que se repitan hasta donde se lo indiquemos, para ello necesitamos dividirlo en tres partes, primero se tiene que cerar una variable, segundo se tiene que asignar una condicion en esa variable o como una expresion condicinal de la misma y por tercera parte debemos infcrementar esa variable con un doble + para indicar el valor de la variable mas uno como un atajo en matematicas pero en js, luego de haber escrito ese comando debemos imprimirlo con console.log(variable)para que nos salga la secuencia que estamos buscando, es importante poner los doble + porque si no se puede comvertir en un bucle infinito y hata se puede tranara elk mismo sistema o la computadora, tambien poner el ; en cada una de las partes como una division para que el programa pueda funsonar mejor y no halla confunsiones en el interperte o para otros programadores

&&:
La doble & es uno de los operadores logicos que evalua si dos carateres son verdaderos, conq eu uno de ellos sea false imprimira como respuesta o nos devolvera como un false a apesar de que una de esos valores  este bien, ya que evalua si exactamente los dos valores son iguales ya que este doble & indica "y" o "and" entonces tiene que ser las dos juntas.

|| :
Este operador logico representa un "o" o tambien entendido como "or" este operador evalua dos expresiones y si una de ellas es verdadera sale como true, auqneu la otra este mal, si las dos estan bien sale true pero si las dos estan mal sale false, ya que estamos diciendo que con "or" o el "o" es que solo basta con que una de las dos expresiones este bien, no es necesario las dos como el "and" de &&.

!:
Este operador lógico represneta un "no" o un "not" en ingles, este indica que una expresion no es igual !==e a una variable asiganada o en comparacion de otra expresion con la cual se esta comparando,este "no" significa todo lo contrario a loq ue puede salir en un true o un false, va en direccion contraria, indica que lo que estas escribiendo o expresando "no" es compatible o no es igual a la expresion en comparacion.
